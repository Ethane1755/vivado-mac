#!/bin/bash

# Vivado Launcher Script
# Quick launcher for Vivado on macOS with Docker

# Function to find vivado-mac directory
find_vivado_dir() {
    local script_path="${BASH_SOURCE[0]}"
    
    # Try to resolve symlinks
    if command -v readlink >/dev/null 2>&1; then
        script_path="$(readlink -f "$script_path" 2>/dev/null || readlink "$script_path" 2>/dev/null || echo "$script_path")"
    elif command -v realpath >/dev/null 2>&1; then
        script_path="$(realpath "$script_path" 2>/dev/null || echo "$script_path")"
    fi
    
    local script_dir="$(dirname "$script_path")"
    
    # Check if we're in the vivado-mac directory (has required files)
    if [[ -f "$script_dir/scripts/start_container.sh" && -f "$script_dir/openFPGALoader" ]]; then
        echo "$script_dir"
        return 0
    fi
    
    # Check if current directory is vivado-mac
    local current_dir="$(pwd)"
    if [[ -f "$current_dir/scripts/start_container.sh" && -f "$current_dir/openFPGALoader" ]]; then
        echo "$current_dir"
        return 0
    fi
    
    # Search common installation paths
    local search_paths=(
        "$HOME/vivado-mac"
        "$HOME/Documents/vivado-mac"
        "$HOME/Applications/vivado-mac"
        "/usr/local/vivado-mac"
        "/opt/vivado-mac"
    )
    
    for path in "${search_paths[@]}"; do
        if [[ -d "$path" && -f "$path/scripts/start_container.sh" && -f "$path/openFPGALoader" ]]; then
            echo "$path"
            return 0
        fi
    done
    
    return 1
}

# Get the vivado-mac directory
VIVADO_DIR="$(find_vivado_dir)"

if [[ -z "$VIVADO_DIR" ]]; then
    echo "‚ùå Error: Could not find vivado-mac installation directory."
    echo ""
    echo "Please ensure vivado-mac is installed in one of these locations:"
    echo "  - $HOME/vivado-mac"
    echo "  - $HOME/Documents/vivado-mac"
    echo "  - $HOME/Applications/vivado-mac"
    echo "  - /usr/local/vivado-mac"
    echo "  - /opt/vivado-mac"
    echo ""
    echo "Or run this script from within the vivado-mac directory."
    exit 1
fi

echo "üöÄ Starting Vivado 2024.2..."
echo "üìÅ Vivado directory: $VIVADO_DIR"

# Check if Docker is running, start if needed
if ! /usr/local/bin/docker info > /dev/null 2>&1; then
    echo "üê≥ Docker is not running. Starting Docker Desktop..."
    
    # Start Docker Desktop
    open -a Docker
    
    echo "‚è≥ Waiting for Docker to start (this may take 30-60 seconds)..."
    
    # Wait for Docker to become available
    TIMEOUT=120
    COUNTER=0
    while ! /usr/local/bin/docker info > /dev/null 2>&1; do
        if [ $COUNTER -ge $TIMEOUT ]; then
            echo "‚ùå Timeout waiting for Docker to start. Please check Docker Desktop."
            exit 1
        fi
        
        printf "."
        sleep 2
        COUNTER=$((COUNTER + 2))
    done
    
    echo ""
    echo "‚úÖ Docker is now running!"
    sleep 2
else
    echo "‚úÖ Docker is already running!"
fi

# Change to the vivado-mac directory
cd "$VIVADO_DIR"

# Launch Vivado
echo "üñ•Ô∏è  Configuring X11 forwarding and starting container..."
exec ./scripts/start_container.sh